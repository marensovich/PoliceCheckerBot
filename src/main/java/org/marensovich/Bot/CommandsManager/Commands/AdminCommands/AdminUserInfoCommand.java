package org.marensovich.Bot.CommandsManager.Commands.AdminCommands;

import org.marensovich.Bot.CommandsManager.Command;
import org.marensovich.Bot.Data.UserInfo;
import org.marensovich.Bot.DatabaseManager;
import org.marensovich.Bot.TelegramBot;
import org.marensovich.Bot.Utils.LoggerUtil;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

public class AdminUserInfoCommand implements Command {
    @Override
    public String getName() {
        return "/auserinfo";
    }

    @Override
    public void execute(Update update) {
        TelegramBot.getInstance().getCommandManager().setActiveCommand(update.getMessage().getFrom().getId(), this);
        String[] parts = update.getMessage().getText().split(" ");
        Long chatId = update.getMessage().getChatId();
        Long userId = update.getMessage().getFrom().getId();

        DatabaseManager databaseManager = TelegramBot.getDatabaseManager();

        UserInfo userData;

        if (parts.length < 2) {
            userData = databaseManager.getUserInfo(userId);
            if (userData == null) {
                SendMessage sendMessage = new SendMessage();
                sendMessage.setChatId(chatId);
                sendMessage.setText("–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
                sendMessage.setParseMode("HTML");
                try {
                    TelegramBot.getInstance().execute(sendMessage);
                } catch (TelegramApiException ex) {
                    TelegramBot.getInstance().sendErrorMessage(update.getMessage().getFrom().getId(), "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
                    TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
                    LoggerUtil.logError(getClass(), "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: " + ex.getMessage());
                    ex.printStackTrace();
                    throw new RuntimeException(ex);
                }
                TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
                return;
            }
        } else {
            String arg = parts[1];
            long targetUserId;
            try {
                targetUserId = Long.parseLong(arg);
            } catch (NumberFormatException e) {
                LoggerUtil.logError(getClass(), "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: " + e.getMessage());
                e.printStackTrace();
                SendMessage sendMessage = new SendMessage();
                sendMessage.setChatId(chatId);
                sendMessage.setText("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
                sendMessage.setParseMode("HTML");
                try {
                    TelegramBot.getInstance().execute(sendMessage);
                } catch (TelegramApiException ex) {
                    TelegramBot.getInstance().sendErrorMessage(update.getMessage().getFrom().getId(), "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
                    TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
                    LoggerUtil.logError(getClass(), "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: " + ex.getMessage());
                    ex.printStackTrace();
                    throw new RuntimeException(ex);
                }
                TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
                return;
            }

            userData = databaseManager.getUserInfo(targetUserId);
            if (userData == null) {
                SendMessage sendMessage = new SendMessage();
                sendMessage.setChatId(chatId);
                sendMessage.setText("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.");
                sendMessage.setParseMode("HTML");
                try {
                    TelegramBot.getInstance().execute(sendMessage);
                } catch (TelegramApiException e) {
                    TelegramBot.getInstance().sendErrorMessage(update.getMessage().getFrom().getId(), "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
                    TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
                    LoggerUtil.logError(getClass(), "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: " + e.getMessage());
                    e.printStackTrace();
                    throw new RuntimeException(e);
                }
                TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
                return;
            }
        }

        String limitgenmap;
        if (userData.subscribe.equals("vip")){
            limitgenmap = userData.genMap + "/" + TelegramBot.getDatabaseManager().getIntValueBotData("limit_map_generation_VIP");
        } else if (userData.subscribe.equals("premium")){
            limitgenmap = userData.genMap + "/" + TelegramBot.getDatabaseManager().getIntValueBotData("limit_map_generation_PREMIUM");
        } else {
            limitgenmap = "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ";
        }

        String message = String.format(
                """
              <b>üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:</b>
              <b> üÜî ID: </b>%s
              <b> üåê –Ø–∑—ã–∫: </b>%s
              <b> üé® –¢–µ–º–∞: </b>%s
              <b> üó∫Ô∏è –¢–∏–ø –∫–∞—Ä—Ç—ã: </b>%s
              <b> üîî –ü–æ–¥–ø–∏—Å–∫–∞: </b>%s
              <b> üó∫Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã: </b>%s
              <b> üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: </b>%s
              <b> üí≥ –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: </b>%s
              <b> ‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∞: </b>%s""",
                userData.getUserId(),
                userData.getYandexLang(),
                userData.getYandexTheme(),
                userData.getYandexMaptype(),
                userData.getSubscribe(),
                limitgenmap,
                userData.getRegistrationTime().toString(),
                (userData.getSubscribeType() != null) ? userData.getSubscribeType() : "–ù–µ—Ç",
                (userData.getSubscriptionExpiration() != null) ? userData.getSubscriptionExpiration().toString() : "–ù–µ—Ç"
        );

        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText(message);
        sendMessage.setParseMode("HTML");
        try {
            TelegramBot.getInstance().execute(sendMessage);
        } catch (TelegramApiException e) {
            TelegramBot.getInstance().sendErrorMessage(update.getMessage().getFrom().getId(), "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
            TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
            LoggerUtil.logError(getClass(), "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: " + e.getMessage());
            e.printStackTrace();
            throw new RuntimeException(e);
        }
        TelegramBot.getInstance().getCommandManager().unsetActiveCommand(update.getMessage().getFrom().getId());
    }

}